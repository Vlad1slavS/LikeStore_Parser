import re
from telethon import TelegramClient
from telethon.errors import ChannelPrivateError, ChatIdEmptyError
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import time

# –ó–∞–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å–≤–æ–∏
api_id = '21493397'  # –í–∞—à api_id (—á–∏—Å–ª–æ)
api_hash = 'b3237b66bac239e73eca872ca935e8cd'  # –í–∞—à api_hash (—Å—Ç—Ä–æ–∫–∞)
phone = '79145296916'  # –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –∫–æ–¥–æ–º
target_channel = 'https://t.me/+7uEm3vcRuBRiNWZi'  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
target_message_id = [17, 1495, 1496]  # ID —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å
# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Google –¢–∞–±–ª–∏—Ü–∞—Ö
scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
credentials = ServiceAccountCredentials.from_json_keyfile_name('secret-key.json', scope)
gc = gspread.authorize(credentials)

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
spreadsheet_name = 'tovary'
spreadsheet = gc.open(spreadsheet_name)
worksheet = spreadsheet.worksheet('–õ–∏—Å—Ç1')

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
client = TelegramClient('session_name', api_id, api_hash)

async def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    await client.start()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª
        channel = await client.get_entity(target_channel)
        row = 2
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ ID

        for i in range (len(target_message_id)):
            message = await client.get_messages(channel, ids=target_message_id[i])

            # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ñ–ª–∞–≥–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è

            items = re.findall(r'([üá∫üá∏üá¨üáßüá®üá¶üá©üá™üá´üá∑üáØüáµüáÆüá≥üá¶üá™üá®üá≥]*[^\n‚Äì]+) ‚Äì (\d{1,3}(?:\.\d{3})*(?:,\d{1,2})?‚ÇΩ)', message.text)
            print(items)

            # –í—ã–≤–æ–¥–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ü–µ–Ω—ã
            if items:
                print("–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–∞–º–∏:")
                for i, (country_flag, price) in enumerate(items):
                    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
                    country_flag = country_flag.strip()
                    words = country_flag.split()
                    color = ' '.join(words[-2])
                    model_name = ' '.join(words[:-2])  # –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ - –≤—Å–µ —Å–ª–æ–≤–∞ –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
                    last_word = words[-1]  # –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ - —Ñ–ª–∞–≥ –∏–ª–∏ –¥—Ä—É–≥–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                    worksheet.update_cell(row, 1, model_name)
                    worksheet.update_cell(row, 2, color)
                    worksheet.update_cell(row, 3, last_word)
                    worksheet.update_cell(row, 4, price)
                    row += 1
                    print(i)
                    time.sleep(3)
            else:
                print("–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

        else:
            print("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    except ChannelPrivateError:
        print("–ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç—ã–π. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —É—á–∞—Å—Ç–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞.")
    except ChatIdEmptyError:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —á–∞—Ç–∞.")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
with client:
    client.loop.run_until_complete(main())